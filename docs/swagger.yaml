basePath: /
definitions:
  models.ErrorResponse:
    description: Структура, используемая для возврата сообщений об ошибках.
    properties:
      error:
        description: Сообщение об ошибке
        type: string
    type: object
  models.ResponseAllSongs:
    description: Структура ответа для API, возвращающего все песни
    properties:
      limit:
        type: integer
      page:
        type: integer
      songs:
        items:
          $ref: '#/definitions/models.Song'
        type: array
      total:
        type: integer
    type: object
  models.ResponseSongVerses:
    description: Структура ответа для API, возвращающего куплеты песни
    properties:
      group:
        type: string
      limit:
        type: integer
      page:
        type: integer
      releaseDate:
        type: string
      song:
        type: string
      total:
        type: integer
      verses:
        items:
          type: string
        type: array
    type: object
  models.Song:
    description: Модель, содержащая информацию о песне, включая её название, группу,
      дату выпуска, текст и ссылку на видео.
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  models.SongInput:
    description: Структура, содержащая информацию о песне и группе для создания новой
      записи в библиотеке.
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.SuccessResponse:
    description: Структура содержит сообщение о том, что операция выполнена успешно.
    properties:
      message:
        description: Описание успешного выполнения операции
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: i@evgesh4.ru
    name: Евгений
  description: API для управления песнями в библиотеке. Позволяет пользователям получать
    информацию о песнях, добавлять новые, обновлять и удалять существующие.
  title: MusicLibrary API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен с возможностью фильтрации по группе, названию
        и дате выпуска, а также поддержкой пагинации.
      parameters:
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - description: Дата выпуска в формате DD.MM.YYYY
        in: query
        name: releaseDate
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 5
        description: Количество песен на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список песен
          schema:
            $ref: '#/definitions/models.ResponseAllSongs'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение всех песен
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавляет новую песню в библиотеку и обогащает её данные из внешнего
        API.
      parameters:
      - description: Данные песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SongInput'
      produces:
      - application/json
      responses:
        "200":
          description: Созданная песня
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Песня уже существует
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Создание новой песни
      tags:
      - songs
  /songs/{id}:
    delete:
      description: Удаляет песню из библиотеки по её ID.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Удаление песни
      tags:
      - songs
    get:
      consumes:
      - application/json
      description: Возвращает куплеты песни по указанному ID с поддержкой пагинации.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 1
        description: Лимит на куплеты
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о песне и ее куплеты
          schema:
            $ref: '#/definitions/models.ResponseSongVerses'
        "404":
          description: Песня не найдена или куплеты закончились
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение куплетов песни
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Обновляет информацию о песне по её ID. Можно передавать только
        те поля модели, которые требуется изменить; остальные останутся без изменений.
        Изменение ID песни не допускается.
      parameters:
      - description: ID песни. Изменение ID не допускается.
        in: path
        name: id
        required: true
        type: integer
      - description: 'Обновлённые данные песни (частичное обновление допускается).
          Формат даты releaseDate: DD.MM.YYYY'
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённая песня
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Обновление песни
      tags:
      - songs
swagger: "2.0"
